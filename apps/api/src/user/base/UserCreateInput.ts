/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserRankingCreateNestedManyWithoutUsersInput } from "./UserRankingCreateNestedManyWithoutUsersInput";
import { Type } from "class-transformer";
import { UserOnboardingCreateNestedManyWithoutUsersInput } from "./UserOnboardingCreateNestedManyWithoutUsersInput";
import { GuildsMembersCreateNestedManyWithoutUsersInput } from "./GuildsMembersCreateNestedManyWithoutUsersInput";
import { AnnouncementCreateNestedManyWithoutUsersInput } from "./AnnouncementCreateNestedManyWithoutUsersInput";
import { TransactionsPortugueseCoinsCreateNestedManyWithoutUsersInput } from "./TransactionsPortugueseCoinsCreateNestedManyWithoutUsersInput";
import { TransactionsHonorGloryCreateNestedManyWithoutUsersInput } from "./TransactionsHonorGloryCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => UserRankingCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserRankingCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserRankingCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  userRankings?: UserRankingCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserOnboardingCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserOnboardingCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserOnboardingCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  userOnboardings?: UserOnboardingCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => GuildsMembersCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => GuildsMembersCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => GuildsMembersCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  guildsMembersItems?: GuildsMembersCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => AnnouncementCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AnnouncementCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AnnouncementCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  announcements?: AnnouncementCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TransactionsPortugueseCoinsCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TransactionsPortugueseCoinsCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TransactionsPortugueseCoinsCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  transactionsPortugueseCoinsItems?: TransactionsPortugueseCoinsCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TransactionsHonorGloryCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TransactionsHonorGloryCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TransactionsHonorGloryCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  transactionsHonorGlories?: TransactionsHonorGloryCreateNestedManyWithoutUsersInput;
}

export { UserCreateInput as UserCreateInput };
