/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserRankingUpdateManyWithoutUsersInput } from "./UserRankingUpdateManyWithoutUsersInput";
import { Type } from "class-transformer";
import { UserOnboardingUpdateManyWithoutUsersInput } from "./UserOnboardingUpdateManyWithoutUsersInput";
import { GuildsMembersUpdateManyWithoutUsersInput } from "./GuildsMembersUpdateManyWithoutUsersInput";
import { AnnouncementUpdateManyWithoutUsersInput } from "./AnnouncementUpdateManyWithoutUsersInput";
import { TransactionsPortugueseCoinsUpdateManyWithoutUsersInput } from "./TransactionsPortugueseCoinsUpdateManyWithoutUsersInput";
import { TransactionsHonorGloryUpdateManyWithoutUsersInput } from "./TransactionsHonorGloryUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => UserRankingUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserRankingUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserRankingUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userRankings?: UserRankingUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserOnboardingUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserOnboardingUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserOnboardingUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userOnboardings?: UserOnboardingUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => GuildsMembersUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => GuildsMembersUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => GuildsMembersUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  guildsMembersItems?: GuildsMembersUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => AnnouncementUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AnnouncementUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AnnouncementUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  announcements?: AnnouncementUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TransactionsPortugueseCoinsUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TransactionsPortugueseCoinsUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TransactionsPortugueseCoinsUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  transactionsPortugueseCoinsItems?: TransactionsPortugueseCoinsUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TransactionsHonorGloryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TransactionsHonorGloryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TransactionsHonorGloryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  transactionsHonorGlories?: TransactionsHonorGloryUpdateManyWithoutUsersInput;
}

export { UserUpdateInput as UserUpdateInput };
