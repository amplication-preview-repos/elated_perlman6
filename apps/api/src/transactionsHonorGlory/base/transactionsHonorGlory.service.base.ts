/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  TransactionsHonorGlory as PrismaTransactionsHonorGlory,
  User as PrismaUser,
} from "@prisma/client";

export class TransactionsHonorGloryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TransactionsHonorGloryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.transactionsHonorGlory.count(args);
  }

  async transactionsHonorGlories(
    args: Prisma.TransactionsHonorGloryFindManyArgs
  ): Promise<PrismaTransactionsHonorGlory[]> {
    return this.prisma.transactionsHonorGlory.findMany(args);
  }
  async transactionsHonorGlory(
    args: Prisma.TransactionsHonorGloryFindUniqueArgs
  ): Promise<PrismaTransactionsHonorGlory | null> {
    return this.prisma.transactionsHonorGlory.findUnique(args);
  }
  async createTransactionsHonorGlory(
    args: Prisma.TransactionsHonorGloryCreateArgs
  ): Promise<PrismaTransactionsHonorGlory> {
    return this.prisma.transactionsHonorGlory.create(args);
  }
  async updateTransactionsHonorGlory(
    args: Prisma.TransactionsHonorGloryUpdateArgs
  ): Promise<PrismaTransactionsHonorGlory> {
    return this.prisma.transactionsHonorGlory.update(args);
  }
  async deleteTransactionsHonorGlory(
    args: Prisma.TransactionsHonorGloryDeleteArgs
  ): Promise<PrismaTransactionsHonorGlory> {
    return this.prisma.transactionsHonorGlory.delete(args);
  }

  async findSenderUser(
    parentId: string,
    args: Prisma.UserFindManyArgs
  ): Promise<PrismaUser[]> {
    return this.prisma.transactionsHonorGlory
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .SenderUser(args);
  }
}
