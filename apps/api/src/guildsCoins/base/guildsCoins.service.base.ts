/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GuildsCoins as PrismaGuildsCoins,
  Guild as PrismaGuild,
} from "@prisma/client";

export class GuildsCoinsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GuildsCoinsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.guildsCoins.count(args);
  }

  async guildsCoinsItems(
    args: Prisma.GuildsCoinsFindManyArgs
  ): Promise<PrismaGuildsCoins[]> {
    return this.prisma.guildsCoins.findMany(args);
  }
  async guildsCoins(
    args: Prisma.GuildsCoinsFindUniqueArgs
  ): Promise<PrismaGuildsCoins | null> {
    return this.prisma.guildsCoins.findUnique(args);
  }
  async createGuildsCoins(
    args: Prisma.GuildsCoinsCreateArgs
  ): Promise<PrismaGuildsCoins> {
    return this.prisma.guildsCoins.create(args);
  }
  async updateGuildsCoins(
    args: Prisma.GuildsCoinsUpdateArgs
  ): Promise<PrismaGuildsCoins> {
    return this.prisma.guildsCoins.update(args);
  }
  async deleteGuildsCoins(
    args: Prisma.GuildsCoinsDeleteArgs
  ): Promise<PrismaGuildsCoins> {
    return this.prisma.guildsCoins.delete(args);
  }

  async getGuild(parentId: string): Promise<PrismaGuild | null> {
    return this.prisma.guildsCoins
      .findUnique({
        where: { id: parentId },
      })
      .guild();
  }
}
