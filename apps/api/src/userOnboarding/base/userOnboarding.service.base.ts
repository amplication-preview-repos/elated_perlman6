/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  UserOnboarding as PrismaUserOnboarding,
  User as PrismaUser,
} from "@prisma/client";

export class UserOnboardingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserOnboardingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userOnboarding.count(args);
  }

  async userOnboardings(
    args: Prisma.UserOnboardingFindManyArgs
  ): Promise<PrismaUserOnboarding[]> {
    return this.prisma.userOnboarding.findMany(args);
  }
  async userOnboarding(
    args: Prisma.UserOnboardingFindUniqueArgs
  ): Promise<PrismaUserOnboarding | null> {
    return this.prisma.userOnboarding.findUnique(args);
  }
  async createUserOnboarding(
    args: Prisma.UserOnboardingCreateArgs
  ): Promise<PrismaUserOnboarding> {
    return this.prisma.userOnboarding.create(args);
  }
  async updateUserOnboarding(
    args: Prisma.UserOnboardingUpdateArgs
  ): Promise<PrismaUserOnboarding> {
    return this.prisma.userOnboarding.update(args);
  }
  async deleteUserOnboarding(
    args: Prisma.UserOnboardingDeleteArgs
  ): Promise<PrismaUserOnboarding> {
    return this.prisma.userOnboarding.delete(args);
  }

  async getUserId(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.userOnboarding
      .findUnique({
        where: { id: parentId },
      })
      .user_id();
  }
}
