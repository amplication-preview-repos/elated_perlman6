/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GuildsPrivateInfo as PrismaGuildsPrivateInfo,
  Guild as PrismaGuild,
} from "@prisma/client";

export class GuildsPrivateInfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GuildsPrivateInfoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.guildsPrivateInfo.count(args);
  }

  async guildsPrivateInfos(
    args: Prisma.GuildsPrivateInfoFindManyArgs
  ): Promise<PrismaGuildsPrivateInfo[]> {
    return this.prisma.guildsPrivateInfo.findMany(args);
  }
  async guildsPrivateInfo(
    args: Prisma.GuildsPrivateInfoFindUniqueArgs
  ): Promise<PrismaGuildsPrivateInfo | null> {
    return this.prisma.guildsPrivateInfo.findUnique(args);
  }
  async createGuildsPrivateInfo(
    args: Prisma.GuildsPrivateInfoCreateArgs
  ): Promise<PrismaGuildsPrivateInfo> {
    return this.prisma.guildsPrivateInfo.create(args);
  }
  async updateGuildsPrivateInfo(
    args: Prisma.GuildsPrivateInfoUpdateArgs
  ): Promise<PrismaGuildsPrivateInfo> {
    return this.prisma.guildsPrivateInfo.update(args);
  }
  async deleteGuildsPrivateInfo(
    args: Prisma.GuildsPrivateInfoDeleteArgs
  ): Promise<PrismaGuildsPrivateInfo> {
    return this.prisma.guildsPrivateInfo.delete(args);
  }

  async getGuild(parentId: string): Promise<PrismaGuild | null> {
    return this.prisma.guildsPrivateInfo
      .findUnique({
        where: { id: parentId },
      })
      .guild();
  }
}
