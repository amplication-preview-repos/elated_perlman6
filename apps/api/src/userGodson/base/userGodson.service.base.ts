/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserGodson as PrismaUserGodson } from "@prisma/client";

export class UserGodsonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserGodsonCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userGodson.count(args);
  }

  async userGodsons(
    args: Prisma.UserGodsonFindManyArgs
  ): Promise<PrismaUserGodson[]> {
    return this.prisma.userGodson.findMany(args);
  }
  async userGodson(
    args: Prisma.UserGodsonFindUniqueArgs
  ): Promise<PrismaUserGodson | null> {
    return this.prisma.userGodson.findUnique(args);
  }
  async createUserGodson(
    args: Prisma.UserGodsonCreateArgs
  ): Promise<PrismaUserGodson> {
    return this.prisma.userGodson.create(args);
  }
  async updateUserGodson(
    args: Prisma.UserGodsonUpdateArgs
  ): Promise<PrismaUserGodson> {
    return this.prisma.userGodson.update(args);
  }
  async deleteUserGodson(
    args: Prisma.UserGodsonDeleteArgs
  ): Promise<PrismaUserGodson> {
    return this.prisma.userGodson.delete(args);
  }
}
